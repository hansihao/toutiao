server:
  port: 9527
spring:
  application:
    name: gateway
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #是否与服务发现组件进行结合，通过 serviceId 转发到具体的服务实例。
      routes:
        - id: auth
          uri: lb://auth
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
        - id: system
          uri: lb://system
          predicates:
            - Path=/system/**
          filters:
            - StripPrefix=1
        - id: news  # 鉴权中心
          uri: lb://news  # 目标服务地址，uri以lb://开头（lb代表从注册中心获取服务），后面接的就是你需要转发到的服务名称
          predicates:
            - Path=/news/**    # 要拦截的URL配置
          filters:
            # 限流配置
            - StripPrefix=1
            - name: RequestRateLimiter  # redis限流 ， filter名称必须是RequestRateLimiter
              args:
                key-resolver: '#{@remoteAddrKeyResolver}'  # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
                redis-rate-limiter.replenishRate: 10  # 每秒最大访问次数
                redis-rate-limiter.burstCapacity: 20  # 令牌桶最大容量
              # 降级配置
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: 'forward:/fallback'
        - id: shop  # 鉴权中心
          uri: lb://shop  # 目标服务地址，uri以lb://开头（lb代表从注册中心获取服务），后面接的就是你需要转发到的服务名称
          predicates:
            - Path=/shop/**    # 要拦截的URL配置
          filters:
            # 限流配置
            - StripPrefix=1
            - name: RequestRateLimiter  # redis限流 ， filter名称必须是RequestRateLimiter
              args:
                key-resolver: '#{@remoteAddrKeyResolver}'  # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
                redis-rate-limiter.replenishRate: 10  # 每秒最大访问次数
                redis-rate-limiter.burstCapacity: 20  # 令牌桶最大容量
              # 降级配置
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: 'forward:/fallback'
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:      # 密码（默认为空）
    timeout: 6000ms  # 连接超时时长（毫秒）
    lettuce:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
      #defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true #以IP地址注册到服务中心

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 10000 #断路器超时时间，默认1000ms